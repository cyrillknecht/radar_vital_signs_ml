wandb:
  project_name: "radar-ecg-experiments"
  api_key: "48fd3e4aefe699d5db6a9025aa409e684338a4f5"

dirs:
  data_dir: "dataset_processed"
  unprocessed_data_dir: "dataset"
  save_dir: "outputs"

model: TCN # LSTM, GRU, RNN, MLP, TCN

models:
  TCN:
    run_name: "test_1d_regression"
    input_size: 1 # 1, 130
    output_size: 2 # 1, 2
    hidden_size: 200
    num_layers: 11 # 11 (leads to receptive field of 4095 for 30s slices), 8 (leads to receptive field of 511 for 5s slices)
    kernel_size: 3
    no_dilation_layers: 0 # alternative method to shrink receptive field, removes dilation from first n layers
    # put 0 to disable

  LSTM:
    run_name: "_test_1d_regression"
    input_size: 130
    output_size: 2
    hidden_size: 10
    num_layers: 2
    kernel_size: 0

  GRU:
    run_name: "_test_1d_regression"
    input_size: 130
    output_size: 2
    hidden_size: 200
    num_layers: 2
    kernel_size: 0

  RNN:
    run_name: "_test_1d_regression"
    input_size: 130
    output_size: 2
    hidden_size: 10
    num_layers: 2
    kernel_size: 0

preprocessing:
  multi_dim: False # If True, produces 130 input features, if False, produces 1 input feature
  # remember to also change input_size in model config
  mode: "sawtooth" # "sawtooth", "binary classification"
  # remember to change output_size in model config accordingly
  slice_duration: 30 # adapt the receptive field of TCN to this value using num_layers or no_dilation_layers
  apply_butterworth: True # If True, applies butterworth preprocessing to the data. Otherwise, raw phase data is used.
  apply_peak_envelopes: True # If True, applies peak envelopes preprocessing to the data. Otherwise, raw phase data is used.
  use_magnitude: True # Only applies to multi_dim mode. Change input_size in model config to 65 if True, 130 if False

training:
  max_epochs: 1
  batch_size: 8
  learning_rate: 1e-3
  dev_mode: False # if True, just trains on 1 batch and does not save anything, only for debugging training
  early_stopping_patience: 5
  loss_component_weights: # if weight is 0, the component is not used in the loss
    # regression losses
    mse: 1
    derivative: 0
    second_derivative: 0
    peak_detection: 1
    # classification losses
    cross_entropy: 1
    peak_detection_binary: 1


inference:
  model_path: ""

testing:
  plot: True # plots the predictions locally if wandb_log is False, otherwise plots on wandb
  prominence: 0.2
  wandb_log: True

main:
    mode: "full" # "train", "test", "full", "leave_one_out"
    # train: Runs preprocessing and training
    # test: Runs inference and testing, requires model_path to be set
    # full: runs train and test combined.make sure no model_path is set and that there exists no model with the same name as
    # the one specified in the config
    # leave_one_out: runs full mode for each patient, leaving out one patient each time as a test set
    preprocess_data: False # if True, preprocesses the data, otherwise loads existing preprocessed data
    left_out_subject: 1 # if mode is full, specifies the patient to leave out
    val_subjects: [0] # specifies the patient to use as validation set (for leave_one_out, full, and train mode)




